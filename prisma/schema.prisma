// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./data/bot.db"
}

model User {
  id           Int       @id @default(autoincrement())
  telegramId   String    @unique @map("telegram_id")
  userName     String    @map("user_name")
  firstName    String?   @map("first_name")
  lastName     String?   @map("last_name")
  username     String?   // Telegram username
  
  // JSON fields stored as strings
  expertise   String?   // JSON array: ["DEV", "DESIGN", "CONTENT", "GROWTH", "COMMUNITY"]
  skills      String?   // JSON array: ["FRONTEND", "BACKEND", etc.]
  listings    String?   // JSON array: ["Bounties", "Projects"]
  priceRange  String?   @map("price_range") // JSON object: {"minAmount": 100, "maxAmount": 1000, "rangeLabel": "Pennies Collector"}
  
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  @@map("users")
}

model Listing {
  id                String   @id // Using the original listing ID from API
  title             String
  slug              String   @unique
  deadline          DateTime
  token             String
  usdValue          Int      @map("usd_value")
  type              String   // 'bounty' or 'project'
  compensationType  String   @map("compensation_type") // 'fixed' or 'range'
  
  // Sponsor information (stored as JSON for simplicity)
  sponsor           String   // JSON object with sponsor details
  
  // Skills (stored as JSON array)
  skills            String   // JSON array of skills with subskills
  mappedSkill       String?  @map("mapped_skill") // JSON array of mapped skills using SUPERTEAM_EARN_SKILL_MAPPING
  
  // Metadata
  isActive          Boolean  @default(true) @map("is_active")
  lastFetched       DateTime @default(now()) @map("last_fetched")
  
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")

  @@map("listings")
} 